\<div class="schedule-container">
	<h1>My Schedule</h1>

	<div class="schedule-actions">
		<a href="/schedule/calendar" class="btn-calendar">
			<i class="fas fa-calendar-alt"></i>
			Calendar View
		</a>

		<form class="schedule-filter" action="/schedule" method="GET">
			<div class="filter-group">
				<label for="startDate">From:</label>
				<input
					type="date"
					id="startDate"
					name="startDate"
					value="{{startDate}}"
				/>
			</div>

			<div class="filter-group">
				<label for="endDate">To:</label>
				<input
					type="date"
					id="endDate"
					name="endDate"
					value="{{endDate}}"
				/>
			</div>

			<button type="submit" class="btn-filter">Filter</button>
			<a href="/schedule" class="btn-reset">Reset</a>
		</form>

		<a href="/schedule/settings" class="btn-settings">
			<i class="fas fa-cog"></i>
			Notification Settings
		</a>
	</div>

	{{#if events.length}}
		<div class="date-groups">
			{{#groupByDate events}}
				<div class="date-group">
					<h2 class="date-header">{{formatDateHeading date}}</h2>

					<div class="schedule-events">
						{{#each events}}
							<div class="schedule-event">
								<div class="event-time">
									<span
										class="time-start"
									>{{startTime}}</span>
									<span class="time-separator">-</span>
									<span class="time-end">{{endTime}}</span>
								</div>

								<div class="event-details">
									<h3 class="event-title">
										<a
											href="/groups/{{groupId}}"
										>{{groupName}}</a>
									</h3>

									<div class="event-meta">
										<span
											class="event-course"
										>{{course}}</span>
										<span class="meta-separator">â€¢</span>
										<span
											class="event-location"
										>{{location}}</span>
									</div>
								</div>

								<div class="event-actions">
									<form
										action="/schedule/send-reminder"
										method="POST"
										class="reminder-form"
									>
										<input
											type="hidden"
											name="groupId"
											value="{{groupId}}"
										/>
										<button
											type="submit"
											class="btn-reminder"
											title="Send reminder email"
										>
											<i class="fas fa-bell"></i>
										</button>
									</form>
								</div>
							</div>
						{{/each}}
					</div>
				</div>
			{{/groupByDate}}
		</div>
	{{else}}
		<div class="empty-schedule">
			<p>You don't have any scheduled events.</p>
			<p>Join or create study groups to fill your schedule!</p>
			<div class="empty-actions">
				<a href="/groups" class="btn-browse">Browse Groups</a>
				<a href="/groups/create" class="btn-create">Create Group</a>
			</div>
		</div>
	{{/if}}
</div>

<style>
	.schedule-container { max-width: 900px; margin: 2rem auto; padding: 1rem; }
	.schedule-actions { display: flex; justify-content: space-between;
	align-items: center; margin-bottom: 2rem; flex-wrap: wrap; gap: 1rem; }
	.btn-calendar, .btn-settings { padding: 0.75rem 1rem; background-color:
	#f8f9fa; border: 1px solid #dee2e6; border-radius: 4px; text-decoration:
	none; color: #495057; display: flex; align-items: center; gap: 0.5rem; }
	.btn-calendar:hover, .btn-settings:hover { background-color: #e9ecef; }
	.schedule-filter { display: flex; align-items: center; gap: 0.75rem;
	flex-wrap: wrap; } .filter-group { display: flex; align-items: center; gap:
	0.5rem; } .filter-group label { font-weight: bold; color: #495057; }
	.filter-group input[type="date"] { padding: 0.5rem; border: 1px solid
	#dee2e6; border-radius: 4px; } .btn-filter, .btn-reset { padding: 0.5rem
	1rem; border-radius: 4px; cursor: pointer; } .btn-filter { background-color:
	#007bff; color: white; border: none; } .btn-reset { background-color:
	#6c757d; color: white; text-decoration: none; border: none; } .date-group {
	margin-bottom: 2rem; } .date-header { padding: 0.75rem 1rem;
	background-color: #f8f9fa; border-left: 4px solid #007bff; margin-bottom:
	1rem; font-size: 1.2rem; color: #495057; } .schedule-events { display: flex;
	flex-direction: column; gap: 1rem; } .schedule-event { display: flex; gap:
	1.5rem; background-color: white; border-radius: 8px; box-shadow: 0 2px 10px
	rgba(0, 0, 0, 0.05); padding: 1.25rem; position: relative; } .event-time {
	display: flex; flex-direction: column; align-items: center; min-width: 80px;
	color: #495057; } .time-start, .time-end { font-weight: bold; }
	.time-separator { margin: 0.25rem 0; color: #adb5bd; } .event-details {
	flex: 1; } .event-title { margin: 0 0 0.5rem 0; font-size: 1.2rem; }
	.event-title a { color: #007bff; text-decoration: none; } .event-title
	a:hover { text-decoration: underline; } .event-meta { display: flex;
	align-items: center; gap: 0.5rem; color: #6c757d; font-size: 0.9rem; }
	.meta-separator { color: #ced4da; } .event-actions { display: flex;
	align-items: center; } .btn-reminder { background: none; border: none;
	font-size: 1.2rem; color: #6c757d; cursor: pointer; padding: 0.5rem;
	border-radius: 50%; transition: background-color 0.2s; } .btn-reminder:hover
	{ background-color: #f8f9fa; color: #007bff; } .empty-schedule { text-align:
	center; padding: 3rem; background-color: #f8f9fa; border-radius: 8px; }
	.empty-schedule p:first-child { font-size: 1.2rem; font-weight: bold;
	margin-bottom: 0.5rem; } .empty-actions { display: flex; justify-content:
	center; gap: 1rem; margin-top: 1.5rem; } .btn-browse, .btn-create { padding:
	0.75rem 1.5rem; border-radius: 4px; text-decoration: none; font-weight:
	bold; } .btn-browse { background-color: #007bff; color: white; } .btn-create
	{ background-color: #28a745; color: white; } @media (max-width: 768px) {
	.schedule-actions { flex-direction: column; align-items: stretch; }
	.schedule-filter { flex-direction: column; align-items: stretch; }
	.filter-group { width: 100%; } .filter-group input[type="date"] { flex: 1; }
	.schedule-event { flex-direction: column; } .event-time { flex-direction:
	row; min-width: 0; gap: 0.5rem; } .time-separator { margin: 0; }
	.event-actions { position: absolute; top: 1rem; right: 1rem; } }
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() { // Reminder form
	submission (prevent form submission and use fetch) const reminderForms =
	document.querySelectorAll('.reminder-form'); reminderForms.forEach(form => {
	form.addEventListener('submit', function(e) { e.preventDefault(); const
	groupId = form.querySelector('input[name="groupId"]').value; const submitBtn
	= form.querySelector('button[type="submit"]'); // Disable button and show
	loading state submitBtn.disabled = true; submitBtn.innerHTML = '<i
	class="fas fa-spinner fa-spin"></i>'; fetch('/schedule/send-reminder', {
	method: 'POST', headers: { 'Content-Type': 'application/json' }, body:
	JSON.stringify({ groupId }) }) .then(response => { if (response.ok) { //
	Show success indicator submitBtn.innerHTML = '<i class="fas fa-check"></i>';
	submitBtn.style.color = '#28a745'; // Reset after delay setTimeout(() => {
	submitBtn.disabled = false; submitBtn.innerHTML = '<i class="fas
	fa-bell"></i>'; submitBtn.style.color = ''; }, 3000); } else { throw new
	Error('Failed to send reminder'); } }) .catch(error => {
	console.error('Error sending reminder:', error); // Show error indicator
	submitBtn.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
	submitBtn.style.color = '#dc3545'; // Reset after delay setTimeout(() => {
	submitBtn.disabled = false; submitBtn.innerHTML = '<i class="fas
	fa-bell"></i>'; submitBtn.style.color = ''; }, 3000); }); }); }); });
</script>