<div class="group-details-container">
    <div class="group-header">
        <h1>{{group.groupName}}</h1>
        <div class="group-meta">
            <span class="group-type badge {{group.groupType}}">{{group.groupType}}</span>
            <span class="group-course">{{group.course}}</span>
        </div>
    </div>

    <div class="group-content">
        <div class="group-info">
            <h2>Details</h2>
            <div class="info-row">
                <div class="info-label">Course:</div>
                <div class="info-value">{{group.course}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Meeting Date:</div>
                <div class="info-value">{{group.meetingDate}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Time:</div>
                <div class="info-value">{{group.startTime}} - {{group.endTime}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Location:</div>
                <div class="info-value">{{group.location}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Capacity:</div>
                <div class="info-value">{{group.members.length}}/{{group.capacity}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Description:</div>
                <div class="info-value description">{{group.description}}</div>
            </div>
            
            {{#if group.tags.length}}
            <div class="info-row">
                <div class="info-label">Tags:</div>
                <div class="info-value tags">
                    {{#each group.tags}}
                        <span class="tag">{{this}}</span>
                    {{/each}}
                </div>
            </div>
            {{/if}}
        </div>

        <div class="group-admin">
            <h2>Group Admin</h2>
            <div class="admin-card">
                <div class="admin-avatar">
                    <img src="{{admin.profilePicture}}" alt="{{admin.userName}}">
                </div>
                <div class="admin-info">
                    <h3>{{admin.userName}}</h3>
                </div>
            </div>
        </div>
        
        <div class="group-actions">
            {{#if (eq group.userRole "admin")}}
                <a href="/groups/{{group._id}}/edit" class="btn btn-primary">Edit Group</a>
                <button class="btn btn-danger" id="delete-group-btn" data-group-id="{{group._id}}">Delete Group</button>
                <a href="/groups/{{group._id}}/members" class="btn btn-secondary">Manage Members</a>
            {{else if (eq group.userRole "member")}}
                <button class="btn btn-danger" id="leave-group-btn" data-group-id="{{group._id}}">Leave Group</button>
            {{else if (eq group.userRole "pending")}}
                <button class="btn btn-secondary" id="cancel-request-btn" data-group-id="{{group._id}}">Cancel Request</button>
            {{else}}
                {{#if group.isFull}}
                    <button class="btn btn-secondary" disabled>Group is Full</button>
                {{else}}
                    <button class="btn btn-primary" id="request-join-btn" data-group-id="{{group._id}}">Request to Join</button>
                {{/if}}
            {{/if}}
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle delete group
    const deleteBtn = document.getElementById('delete-group-btn');
    if (deleteBtn) {
        deleteBtn.addEventListener('click', async function() {
            if (confirm('Are you sure you want to delete this group? This action cannot be undone.')) {
                try {
                    const response = await fetch('/groups/deleteGroup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ groupId: deleteBtn.dataset.groupId })
                    });
                    
                    if (response.ok) {
                        window.location.href = '/groups/myGroups';
                    } else {
                        const data = await response.json();
                        alert(data.message || 'Failed to delete group');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the group');
                }
            }
        });
    }
    
    // Handle leave group
    const leaveBtn = document.getElementById('leave-group-btn');
    if (leaveBtn) {
        leaveBtn.addEventListener('click', async function() {
            if (confirm('Are you sure you want to leave this group?')) {
                try {
                    const response = await fetch('/groups/leave', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ groupId: leaveBtn.dataset.groupId })
                    });
                    
                    if (response.ok) {
                        window.location.href = '/groups/myGroups';
                    } else {
                        const data = await response.json();
                        alert(data.message || 'Failed to leave group');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while leaving the group');
                }
            }
        });
    }
    
    // Handle cancel request
    const cancelBtn = document.getElementById('cancel-request-btn');
    if (cancelBtn) {
        cancelBtn.addEventListener('click', async function() {
            if (confirm('Are you sure you want to cancel your join request?')) {
                try {
                    const response = await fetch('/groups/cancelReq', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ groupId: cancelBtn.dataset.groupId })
                    });
                    
                    if (response.ok) {
                        window.location.href = '/groups/myGroups';
                    } else {
                        const data = await response.json();
                        alert(data.message || 'Failed to cancel request');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while canceling your request');
                }
            }
        });
    }
    
    // Handle request to join
    const requestBtn = document.getElementById('request-join-btn');
    if (requestBtn) {
        requestBtn.addEventListener('click', async function() {
            try {
                const response = await fetch('/groups/reqJoin', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ formId: requestBtn.dataset.groupId })
                });
                
                if (response.ok) {
                    requestBtn.textContent = 'Request Sent';
                    requestBtn.disabled = true;
                    alert('Your join request has been sent to the group admin');
                } else {
                    const data = await response.json();
                    alert(data.message || 'Failed to send request');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while sending your request');
            }
        });
    }
});
</script>

<style>
.group-details-container {
    max-width: 900px;
    margin: 2rem auto;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    overflow: hidden;
}

.group-header {
    padding: 2rem;
    background-color: #f5f7fa;
    border-bottom: 1px solid #eee;
}

.group-header h1 {
    margin: 0 0 0.5rem 0;
    color: #2c3e50;
}

.group-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.group-type {
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: bold;
    text-transform: uppercase;
}

.study-group {
    background-color: #3498db;
    color: white;
}

.project-group {
    background-color: #2ecc71;
    color: white;
}

.group-course {
    font-weight: bold;
    color: #7f8c8d;
}

.group-content {
    padding: 2rem;
}

.group-info, .group-admin {
    margin-bottom: 2rem;
}

.group-info h2, .group-admin h2 {
    margin-top: 0;
    margin-bottom: 1rem;
    color: #34495e;
    font-size: 1.3rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 0.5rem;
}

.info-row {
    display: flex;
    margin-bottom: 0.8rem;
}

.info-label {
    width: 120px;
    font-weight: bold;
    color: #7f8c8d;
}

.info-value {
    flex: 1;
}

.info-value.description {
    white-space: pre-line;
}

.tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.tag {
    background-color: #ecf0f1;
    color: #7f8c8d;
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    font-size: 0.8rem;
}

.admin-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    background-color: #f5f7fa;
    padding: 1rem;
    border-radius: 8px;
}

.admin-avatar img {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    object-fit: cover;
}

.admin-info h3 {
    margin: 0;
    color: #2c3e50;
}

.group-actions {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
    justify-content: flex-end;
}

.btn {
    padding: 0.7rem 1.2rem;
    border-radius: 4px;
    font-weight: bold;
    text-decoration: none;
    cursor: pointer;
    border: none;
    font-size: 0.9rem;
    transition: background-color 0.2s;
}

.btn-primary {
    background-color: #3498db;
    color: white;
}

.btn-primary:hover {
    background-color: #2980b9;
}

.btn-secondary {
    background-color: #95a5a6;
    color: white;
}

.btn-secondary:hover {
    background-color: #7f8c8d;
}

.btn-danger {
    background-color: #e74c3c;
    color: white;
}

.btn-danger:hover {
    background-color: #c0392b;
}

.btn[disabled] {
    opacity: 0.6;
    cursor: not-allowed;
}
</style>